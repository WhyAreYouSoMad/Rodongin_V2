<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="shop.mtcoding.rodongin.model.customer.CustomerRepository">

<resultMap id="detailDto" type="shop.mtcoding.rodongin.dto.customer.CustomerDetailOutDto">
        <id property="id" column="id"/>
        <result property="customerTitle" column="customer_title"/>
        <result property="customerContent" column="customer_content"/>
        <result property="createdAt" column="created_at"/>
        <association property="employee" javaType="shop.mtcoding.rodongin.dto.customer.CustomerDetailOutDto$EmployeeDto">
            <id property="id" column="id"/>
            <result property="employeeName" column="employee_name"/>
        </association>
    </resultMap>

    <select id="findCustomerDetail" resultMap="detailDto">
    SELECT cu.id, cu.customer_title, cu.customer_content, cu.employee_id, em.employee_name
    FROM customer cu
    INNER JOIN employee em 
    ON cu.employee_id = em.id
    WHERE cu.id = #{id}
    </select> 

    <select id="findCustomerList" resultType="shop.mtcoding.rodongin.dto.customer.CustomerResp$CustomerListRespDto">
        SELECT cu.id, cu.customer_title, em.employee_name, cu.created_at
        FROM customer cu 
        INNER JOIN employee em ON cu.employee_id = em.id
        ORDER BY cu.id DESC
        <!-- LIMIT 0, 7 -->
    </select>
    <!-- 페이징 연습해보기 -->

    <select id="findAll" resultType="shop.mtcoding.rodongin.model.customer.Customer">
        select * from customer
    </select>

    <select id="findById" resultType="shop.mtcoding.rodongin.model.customer.Customer">
        select * from customer where id = #{id}
    </select>    

    <insert id="insert">

    INSERT INTO customer (customer_title, customer_content, employee_id, created_at) 
    VALUES (#{customerSaveInDto.customerTitle}, #{customerSaveInDto.customerContent}, #{employeeId}, now())

    </insert>    

    <delete id="deleteById" >
        delete from customer where id = #{id}
    </delete>    

    <update id="updateById" >
        update customer set customer_title= #{customerTitle}, customer_content= #{customerContent} where id = #{id} 
    </update>    

</mapper>